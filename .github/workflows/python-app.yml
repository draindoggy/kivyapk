name: Build APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-setuptools git zip unzip openjdk-17-jdk libffi-dev libssl-dev expect

      - name: Install Android SDK and Build-Tools
        run: |
          # Создаем директорию для Android SDK
          mkdir -p ~/android-sdk

          # Скачиваем Command Line Tools
          cd ~/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip -d cmdline-tools
          rm commandlinetools-linux-9477386_latest.zip

          # Переименовываем директорию для корректной работы sdkmanager
          mv cmdline-tools/cmdline-tools cmdline-tools/latest

          # Настраиваем переменные окружения
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/build-tools/34.0.0:$PATH" >> $GITHUB_ENV

           # Используем expect для автоматического ввода "y" для принятия лицензий
          echo "Принимаем лицензии Android SDK..."
          expect -c '
            set timeout 60
            spawn $env(ANDROID_HOME)/cmdline-tools/latest/bin/sdkmanager --licenses
            expect {
              "Do you accept the license" { send "y\r"; exp_continue }
              "All SDK package licenses accepted." { exit 0 }
              timeout { exit 1 }
              eof { exit 1 }
           }
           exit 0
          ' || { echo "Failed to accept licenses"; exit 1; }

          # Устанавливаем необходимые компоненты
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;34.0.0"

          # Проверяем, что build-tools установлены
          ls -la $ANDROID_HOME/build-tools/34.0.0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install buildozer cython

      - name: Initialize Buildozer (if spec file does not exist)
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          else
            echo "buildozer.spec already exists, skipping initialization."
          fi
      - name: Build APK with Buildozer
        run: |
            buildozer -v android debug
        working-directory: . # Убедиться, что сборка идёт в папке проекта

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: bin/*.apk
